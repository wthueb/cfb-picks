name: docker

on:
  push:
    branches:
      - master

permissions:
  packages: write
  contents: read
  attestations: write
  id-token: write

jobs:
  docker:
    strategy:
      fail-fast: false
      matrix:
        app: [web, notifier]
        platform: [linux/amd64, linux/arm64]
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
          - platform: linux/arm64
            runner: ubuntu-24.04-arm

    runs-on: ${{ matrix.runner }}

    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: wthueb/cfb-picks-${{ matrix.app }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/${{ matrix.app }}/Dockerfile
          platforms: ${{ matrix.platform }}
          tags: wthueb/cfb-picks-${{ matrix.app }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Export digest
        run: |
            mkdir -p ${{ runner.temp }}/digests
            digest="${{ steps.build.outputs.digest }}"
            touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.app }}-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs: docker

    strategy:
      fail-fast: false
      matrix:
        app: [web, notifier]

    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-${{ matrix.app }}-*
          merge-multiple: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            wthueb/cfb-picks-${{ matrix.app }}
            ghcr.io/${{ github.repository_owner }}/cfb-picks-${{ matrix.app }}

      - name: Create Docker Hub manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create \
            $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'wthueb/cfb-picks-${{ matrix.app }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect wthueb/cfb-picks-${{ matrix.app }}:${{ steps.meta.outputs.version }}
          docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/cfb-picks-${{ matrix.app }}:${{ steps.meta.outputs.version }}
